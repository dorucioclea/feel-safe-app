variables:
  APP_NAME: "prototype"
  HOCKEY_APP_TOKEN: "a23112aed3a84f85b85323240f88d480"
  ANDROID_HOCKEY_APP_ID: "5e01523916244d7cbd63c4f52e166d39"
  IOS_HOCKEY_APP_ID: "66f7adb447f5491ea249d1a998842ba7"
stages:
- audit
- lint
- test
- deploy
audit:
 stage: audit
 script:
 - echo $CI_JOB_URL
 - echo $CI_PROJECT_NAME
 - echo $CI_PROJECT_URL
 - npm audit | grep -q 'high' && curl -X POST https://hooks.slack.com/services/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 -H 'Content-Type":" application/json' -H 'cache-control":" no-cache' -d '{ "channel"":" "i_npm-audit", "username"":" "npm audit bot", "icon_emoji"":" ":rotating_light:", "attachments"":" [{ "title"":" "Security issues found in $CI_PROJECT_NAME.", "title_link"":" "$CI_JOB_URL", "color"":" "warning", "text"":" "Severity":" high" }] }'
 only:
 - schedules
 - npm-audit
lint:
  stage: lint
  script:
  - echo "Linting project"
  - npm i
  - npm run check-dependencies
  - npm run lint
  tags:
  - ionic
  except:
    - schedules
test:
  stage: test
  script:
  - echo "Test"
  tags:
  - ionic
  except:
    - schedules
staging_android:
  stage: deploy
  script:
  - source $HOME/.profile
  - mkdir -p www
  - whoami
  - pwd
  - ls -la
  - echo "--- Preparing Ionic app"
  - npm install
  - ionic info
  - cordova prepare android --no-build
  - echo "--- Building Ionic app"
  - npm run build:android:staging:prod
  - echo "--- Upload to hockey"
  - "cd platforms/android/app/build/outputs/apk/debug/ && curl -F \"status=2\" -F \"notify=0\" -F \"notes=Continuous Integration Test\" -F \"notes_type=1\" -F \"ipa=@app-debug.apk\" -H \"X-HockeyAppToken: $HOCKEY_APP_TOKEN\" https://rink.hockeyapp.net/api/2/apps/$ANDROID_HOCKEY_APP_ID/app_versions/upload"
  only:
  - tags
  tags:
  - ionic-android
staging_ios:
  stage: deploy
  script:
  - source $HOME/.bash_profile
  - whoami
  - pwd
  - ls -la
  - echo "--- Preparing Ionic app"
  - npm install
  - ionic info
  - cordova prepare ios --no-build
  - pod setup
  - echo "--- Building Ionic app"
 # - ionic cordova build ios --c=staging-prod --release --buildConfig ./build.json --packageType="ad-hoc"
  - ionic cordova build ios --c=staging-prod --verbose --release --buildFlag="-UseModernBuildSystem=0" --buildConfig ./build.json
  - ls platforms/ios/build/device/
  - echo "Upload to hockey"
  - "cd platforms/ios/build/device/ && curl -F \"status=2\" -F \"notify=0\" -F \"notes=Continuous Integration Test\" -F \"notes_type=1\" -F \"ipa=@prototype.ipa\" -H \"X-HockeyAppToken: $HOCKEY_APP_TOKEN\" https://rink.hockeyapp.net/api/2/apps/IOS_HOCKEY_APP_ID/app_versions/upload"
  only:
  - tags
  tags:
  - ionic-ios
release_android:
  stage: deploy
  script:
  - source $HOME/.profile
  - mkdir -p www
  - whoami
  - pwd
  - ls -la
  - echo "--- Preparing Ionic app"
  - npm install
  - ionic info
  - cordova prepare android --no-build
  - echo "--- Building Ionic app"
  - npm run build:android:release
  - echo "--- Release Signing"
  - cd platforms/android/app/build/outputs/apk/release/
  - echo $KEYSTORE_FILE | base64 -d > production.keystore
  - jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore production.keystore -storepass $KEYSTORE_PASSWORD app-release-unsigned.apk $KEY_ALIAS
  - $HOME/android-sdk/build-tools/28.0.3/zipalign -v 4 app-release-unsigned.apk $APP_NAME.apk
  only:
  - tags
  when: manual
  tags:
  - ionic-android
  artifacts:
    paths:
    - platforms/android/app/build/outputs/apk/release/
